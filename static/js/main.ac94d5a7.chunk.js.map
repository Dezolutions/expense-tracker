{"version":3,"sources":["components/AddTransaction.tsx","redux/action.ts","components/Header.tsx","components/Transaction.tsx","components/History.tsx","App.tsx","redux/reducer.ts","redux/store.js","index.tsx"],"names":["AddTransaction","dispatch","useDispatch","React","useState","text","setText","amount","setAmount","className","value","onChange","e","target","placeholder","type","required","onClick","payload","id","Date","now","completed","Header","transactions","useSelector","reducer","total","reduce","acc","item","income","filter","acum","expense","Math","abs","Transaction","toggleTransaction","classnames","History","filterArr","length","arr","map","transaction","App","initialState","state","action","chooseArr","filterTrans","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac94d5a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../css/transaction.css'\r\nimport {addTransaction} from '../redux/action'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nfunction AddTransaction() {\r\n  const dispatch = useDispatch()\r\n  const [text, setText] = React.useState('')\r\n  const [amount, setAmount] = React.useState('')\r\n\r\n  const onTextChange = (e :React.FormEvent<HTMLInputElement>):void => {\r\n    setText((e.target as HTMLFormElement).value)\r\n  }\r\n  const onAmounChange = (e :React.FormEvent<HTMLInputElement>):void => {\r\n    setAmount((e.target as HTMLFormElement).value)\r\n  }\r\n  const onAddTransaction = () => {\r\n    if(text && amount){\r\n      dispatch(addTransaction({\r\n        id:Date.now(),\r\n        text,\r\n        amount,\r\n        completed: false\r\n      }))\r\n    }\r\n    setText('');\r\n    setAmount('');\r\n  }\r\n  return (\r\n    <div className=\"transaction\">\r\n      <div className=\"history-title__block\">Add new transaction</div>\r\n      <div className=\"transaction-block\">\r\n        <p className=\"input-title\">Text</p>\r\n        <input className=\"transaction-input\" value={text} onChange={onTextChange} placeholder=\"Enter text...\" type=\"text\" required/>\r\n        <p className=\"input-title\">Amount(negative - expense, positive - income)</p>\r\n        <input className=\"transaction-input\" value={amount} onChange={onAmounChange} placeholder=\"Enter amount...\" type=\"number\" required/>\r\n        <button onClick={onAddTransaction} id=\"transaction-btn\">Add transaction</button> \r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTransaction\r\n","export const addTransaction = (obj:any) => ({\r\n  type: 'ADD_TRANSACTION',\r\n  payload: obj\r\n\r\n})\r\n\r\nexport const toggleTransaction = (id:number) => ({\r\n  type: 'TOGGLE_TRANSACTION',\r\n  id\r\n})\r\n\r\nexport const deleteTransaction = (arr:any) => ({\r\n  type: 'DELETE_TRANSACTION',\r\n  arr\r\n})","import '../css/header.css'\r\nimport {useSelector} from 'react-redux'\r\nimport {Trans, TransObj} from '../types/types'\r\n\r\nfunction Header() {\r\n  const transactions = useSelector((reducer:TransObj)=>reducer.transactions)\r\n\r\n  //считаем баланс\r\n  const total = transactions.reduce((acc:number,item:Trans)=> acc + +item.amount,0)\r\n  \r\n  //считаем приход денег\r\n  const income = transactions\r\n    .filter((item:Trans) => item.amount > 0)\r\n    .reduce((acum:number,item:Trans) =>acum + +item.amount,0)\r\n\r\n  //считаем расходы\r\n  const expense = transactions\r\n    .filter((item:Trans) => item.amount < 0)\r\n    .reduce((acum:number,item:Trans) =>acum + +item.amount,0)\r\n\r\n  \r\n  \r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"title\">\r\n        Expense Tracker\r\n      </h1>\r\n      <div className=\"balance\">\r\n        <p className=\"balance-text\">Your balance</p>\r\n        <p className=\"balance-sum\">{total}$</p>\r\n      </div>\r\n      <div className=\"income-expense\">\r\n        <div className=\"income\">\r\n          <p className=\"income-text\">income</p>\r\n          <p className=\"income-sum\">${income}</p>\r\n        </div>\r\n        <div className=\"border\"></div>\r\n        <div className=\"expense\">\r\n        <p className=\"expense-text\">expense</p>\r\n          <p className=\"expense-sum\">${Math.abs(expense)}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import classnames from 'classnames'\r\nimport { toggleTransaction } from '../redux/action'\r\nimport {useDispatch} from 'react-redux'\r\nimport {Trans} from '../types/types'\r\n\r\n\r\n\r\nfunction Transaction({id,text,amount,completed}:Trans) {\r\n  const dispatch = useDispatch()\r\n\r\n  //выбираем предмет, для того чтобы его можно было удалить\r\n  const onChooseItem = () => {\r\n    dispatch(toggleTransaction(id))\r\n  }\r\n  return (\r\n    <li \r\n        onClick={onChooseItem}\r\n        className={classnames('history-item',{\r\n          'history-item__income': amount > 0,\r\n          'history-item__expense':amount < 0,\r\n          'history-item-choose': completed\r\n        })}>\r\n      <p className=\"item-title\">{text}</p>\r\n      <p className=\"item-amount\">{amount}$</p>\r\n    </li> \r\n  )\r\n}\r\n\r\nexport default Transaction\r\n","import '../css/history.css'\r\nimport {useSelector} from 'react-redux'\r\nimport { deleteTransaction } from '../redux/action'\r\nimport {useDispatch} from 'react-redux'\r\nimport Transaction from './Transaction'\r\nimport {Trans, TransObj} from '../types/types'\r\n\r\n\r\nfunction History() {\r\n  const dispatch = useDispatch();\r\n  const transactions = useSelector((reducer:TransObj)=>reducer.transactions)\r\n  const filterArr = transactions.filter((item:Trans) => item.completed)\r\n  \r\n  //удаляем все выбранные предметы\r\n  const onDeleteTransaction = () => {\r\n    if(filterArr.length !== 0){\r\n      dispatch(deleteTransaction(filterArr))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      <div className=\"history-title__block\">\r\n        <p className=\"history-title\">History</p>\r\n        <p className=\"history-choosing\">selected(<b>{filterArr.length}</b>)</p>\r\n        <button onClick={onDeleteTransaction} className=\"history-delete\">delete</button>\r\n        </div>\r\n      <ul className=\"history-block\">\r\n        {transactions \r\n          &&transactions.map((transaction:any) =>(\r\n          <Transaction key={transaction.id} {...transaction}/>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default History\r\n","import AddTransaction from './components/AddTransaction';\nimport Header from './components/Header';\nimport History from './components/History';\nimport './css/app.css';\n\nfunction App() {\n  return (\n      <div className=\"app\">\n        <Header/>\n        <History/>\n        <AddTransaction/>\n      </div>\n  );\n}\n\nexport default App;\n","import {TransObj} from '../types/types'\r\n\r\nlet initialState :TransObj = {\r\n  transactions: []\r\n}\r\n\r\n\r\nconst reducer = (state = initialState,action:any) => {\r\n  switch (action.type) {\r\n    case 'ADD_TRANSACTION' :\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n    case 'TOGGLE_TRANSACTION' :\r\n      const chooseArr = state.transactions.map(transaction =>\r\n        transaction.id === action.id \r\n         ? {...transaction,completed: !transaction.completed}\r\n         : transaction\r\n      )\r\n\r\n      return {\r\n        ...state,\r\n        transactions: [...chooseArr]\r\n      }\r\n    case 'DELETE_TRANSACTION' :\r\n      const filterTrans = state.transactions.filter(item => item.completed === false)\r\n      \r\n      return {\r\n        ...state,\r\n        transactions: [...filterTrans]\r\n      }\r\n      \r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux'\r\nimport reducer from './reducer'\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}